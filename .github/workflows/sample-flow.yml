name: "lesson-ecs-workflow"

on:
    push:
        branches:
            - main
        paths:
            - .github/workflows/**

defaults:
    run:
        shell: bash

jobs:
    introduction:
        runs-on: ubuntu-latest
        steps:
            - name: "Hello World"
              run: |
                echo "Hello, World!"
                echo ${GIT_NAME}
              env:
                GIT_NAME: ${{ github.actor }}
        #continue-on-error: true    # introductionが失敗しても次のjobを実行する

    setup:
        runs-on: ubuntu-latest
        steps:
            - name: "started"
              run: |
                echo "Started!!"

    test:
        runs-on: ubuntu-latest
        steps:
            - name: "checkout"
              uses: actions/checkout@v4
            - name: "Setup Node.js"
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: "Install Dependencies"
              run: |
                npm install
            - name: "Vitest Exec"
              run: |
                echo "This is a Vitest exec step."
                npm run test
        needs: introduction

    build:
        runs-on: ubuntu-latest
        steps:
            - name: "checkout"
              uses: actions/checkout@v4
            - name: "Setup Node.js"
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: "Install Dependencies"
              run: |
                npm install
            - name: "Build Exec"
              run: |
                npm run build
            - name: "List Files"
              run: |
                ls -la
        needs: introduction
    
    dockerimage:
        runs-on: ubuntu-latest 
        steps:
            - name: "checkout"
              uses: actions/checkout@v4
            - name: "docker login"
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: "docker build"
              run: |
                echo ${{ secrets.DOCKER_USERNAME }}
                docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} .
            - name: "docker push"
              run: |
                docker tag ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-app:latest
                docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest
        needs: 
            [test, build]
    
    finally:
        runs-on: ubuntu-latest
        # 直前のjobの成功・失敗に関わらず実行する
        if: always()   
        steps:
            - name: "Final Step"
              run: |
                echo "This is the final step."
        needs: 
            dockerimage


